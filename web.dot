digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_elb.web"
		"[root] aws_instance.web"
		"[root] aws_instance.web (destroy)"
		"[root] aws_security_group.web_host_sg"
		"[root] aws_security_group.web_inbound_sg"
		"[root] module.vpc.aws_internet_gateway.tfb"
		"[root] module.vpc.aws_route.internet_access"
		"[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.provider.aws"
		"[root] provider.aws"
		"[root] provider.aws (close)"
		"[root] provider.module.vpc.aws (close)"
		"[root] aws_elb.web" -> "[root] aws_instance.web"
		"[root] aws_elb.web" -> "[root] aws_security_group.web_inbound_sg"
		"[root] aws_elb.web" -> "[root] module.vpc.aws_subnet.public"
		"[root] aws_elb.web" -> "[root] module.vpc.output.public_subnet_id"
		"[root] aws_elb.web" -> "[root] provider.aws"
		"[root] aws_instance.web (destroy)" -> "[root] provider.aws"
		"[root] aws_instance.web (destroy)" -> "[root] var.instance_ips"
		"[root] aws_instance.web" -> "[root] aws_instance.web (destroy)"
		"[root] aws_instance.web" -> "[root] aws_security_group.web_host_sg"
		"[root] aws_instance.web" -> "[root] module.vpc.aws_subnet.public"
		"[root] aws_instance.web" -> "[root] module.vpc.output.public_subnet_id"
		"[root] aws_instance.web" -> "[root] provider.aws"
		"[root] aws_instance.web" -> "[root] var.ami"
		"[root] aws_instance.web" -> "[root] var.instance_ips"
		"[root] aws_instance.web" -> "[root] var.instance_type"
		"[root] aws_instance.web" -> "[root] var.key_name"
		"[root] aws_instance.web" -> "[root] var.region"
		"[root] aws_security_group.web_host_sg" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] aws_security_group.web_host_sg" -> "[root] module.vpc.output.cidr"
		"[root] aws_security_group.web_host_sg" -> "[root] module.vpc.output.vpc_id"
		"[root] aws_security_group.web_host_sg" -> "[root] provider.aws"
		"[root] aws_security_group.web_inbound_sg" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] aws_security_group.web_inbound_sg" -> "[root] module.vpc.output.vpc_id"
		"[root] aws_security_group.web_inbound_sg" -> "[root] provider.aws"
		"[root] module.vpc.aws_internet_gateway.tfb" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.aws_internet_gateway.tfb" -> "[root] module.vpc.provider.aws"
		"[root] module.vpc.aws_internet_gateway.tfb" -> "[root] module.vpc.var.name"
		"[root] module.vpc.aws_route.internet_access" -> "[root] module.vpc.aws_internet_gateway.tfb"
		"[root] module.vpc.aws_route.internet_access" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.aws_route.internet_access" -> "[root] module.vpc.provider.aws"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.provider.aws"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.name"
		"[root] module.vpc.aws_subnet.public" -> "[root] module.vpc.var.public_subnet"
		"[root] module.vpc.aws_vpc.tfb" -> "[root] module.vpc.provider.aws"
		"[root] module.vpc.aws_vpc.tfb" -> "[root] module.vpc.var.cidr"
		"[root] module.vpc.aws_vpc.tfb" -> "[root] module.vpc.var.enable_dns_hostnames"
		"[root] module.vpc.aws_vpc.tfb" -> "[root] module.vpc.var.enable_dns_support"
		"[root] module.vpc.aws_vpc.tfb" -> "[root] module.vpc.var.name"
		"[root] module.vpc.output.cidr" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.output.public_subnet_id" -> "[root] module.vpc.aws_subnet.public"
		"[root] module.vpc.output.vpc_id" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] module.vpc.provider.aws" -> "[root] provider.aws"
		"[root] output.addresses" -> "[root] aws_instance.web"
		"[root] output.elb_address" -> "[root] aws_elb.web"
		"[root] output.public_subnet_id" -> "[root] module.vpc.aws_subnet.public"
		"[root] output.public_subnet_id" -> "[root] module.vpc.output.public_subnet_id"
		"[root] provider.aws (close)" -> "[root] aws_elb.web"
		"[root] provider.aws (close)" -> "[root] aws_instance.web (destroy)"
		"[root] provider.aws (close)" -> "[root] aws_instance.web"
		"[root] provider.aws (close)" -> "[root] aws_security_group.web_host_sg"
		"[root] provider.aws (close)" -> "[root] aws_security_group.web_inbound_sg"
		"[root] provider.aws (close)" -> "[root] provider.aws"
		"[root] provider.aws" -> "[root] var.region"
		"[root] provider.module.vpc.aws (close)" -> "[root] module.vpc.aws_internet_gateway.tfb"
		"[root] provider.module.vpc.aws (close)" -> "[root] module.vpc.aws_route.internet_access"
		"[root] provider.module.vpc.aws (close)" -> "[root] module.vpc.aws_subnet.public"
		"[root] provider.module.vpc.aws (close)" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] provider.module.vpc.aws (close)" -> "[root] module.vpc.provider.aws"
		"[root] root" -> "[root] module.vpc.aws_route.internet_access"
		"[root] root" -> "[root] module.vpc.aws_subnet.public"
		"[root] root" -> "[root] module.vpc.aws_vpc.tfb"
		"[root] root" -> "[root] module.vpc.output.cidr"
		"[root] root" -> "[root] module.vpc.output.public_subnet_id"
		"[root] root" -> "[root] module.vpc.output.vpc_id"
		"[root] root" -> "[root] module.vpc.plan-destroy"
		"[root] root" -> "[root] output.addresses"
		"[root] root" -> "[root] output.elb_address"
		"[root] root" -> "[root] output.public_subnet_id"
		"[root] root" -> "[root] provider.aws (close)"
		"[root] root" -> "[root] provider.module.vpc.aws (close)"
	}
}

